Springboot加载自定义yml文件配置的方法


        /**
         * 配置文件读取器PropertySourceLoader
         * 1.YamlPropertySourceLoader           负责读取yml和yaml后缀的文件
         * 2.PropertiesPropertySourceLoader     负责读取properties和xml后缀的文件
         * 3.自定义配置文件读取器
         *  3.1实现PropertySourceLoader接口
         *  3.2在META-INF/spring.factories中注册
         *      org.springframework.boot.env.PropertySourceLoader=cn.dgkj.cPropertySourceLoader.CustomPropertySourceLoader
         *
         * 自定义配置文件（默认目录限定为classpath:/,classpath:/config/,file:./,file:./config/，默认名称为application）
         * 假设额外的配置文件路径为classpath:/external/datasource.txt
         *
         *  1.run前
         *          //新增额外的配置文件（文件路径不是classpath:/,classpath:/config/,file:./,file:./config/时需要设置）
         *          System.setProperty(ConfigFileApplicationListener.CONFIG_ADDITIONAL_LOCATION_PROPERTY, "classpath:/external/");
         *          //新增的额外的配置文件的名称（文件名称不是application时需要设置）
         *          System.setProperty(ConfigFileApplicationListener.CONFIG_NAME_PROPERTY, "application,datasource");
         *  2.如果文件后缀是（yml yaml properties xml）则不需要额外的操作，否则需要自定义配置文件读取器
         *      2.1实现PropertySourceLoader接口
         *      2.2在META-INF/spring.factories中注册（key为固定，value为自定义类的全路径）
         *          org.springframework.boot.env.PropertySourceLoader=cn.dgkj.cPropertySourceLoader.CustomPropertySourceLoader
         */

        /**
         * 自定义app的名称(配置文件中设置)
         * spring.application.name=BeanRootApp
         *
         */

        //新增额外的配置文件
        System.setProperty(ConfigFileApplicationListener.CONFIG_ADDITIONAL_LOCATION_PROPERTY, "classpath:/external/");
        //新增的额外的配置文件的名称
        System.setProperty(ConfigFileApplicationListener.CONFIG_NAME_PROPERTY, "application,datasource,mq");